- name: Install and up nginx
  hosts: all
  become: true
  become_method: sudo
  become_user:
    root
  remote_user:
    ansible
  tasks:
    - name: Installs nginx web server
      apt: pkg=nginx state=latest update_cache=true
    - name: Up nginx service
      service: name=nginx state=started enabled=yes

- name: Copy web content to backend1
  hosts: backend1
  become: true
  become_method: sudo
  become_user:
    root
  remote_user:
    ansible
  tasks:
    - name: Add index.html to backend1
      copy:
        src: /etc/ansible/backend1.html
        dest: /var/www/html/index.nginx-debian.html

- name: Copy web content to backend2
  hosts: backend2
  become: true
  become_method: sudo
  become_user:
    root
  remote_user:
    ansible
  tasks:
    - name: Add index.html to backend2
      copy:
        src: /etc/ansible/backend2.html
        dest: /var/www/html/index.nginx-debian.html

- name: Config nginx as load balancer 1
  hosts: lb1
  become: true
  become_method: sudo
  become_user:
    root
  remote_user:
    ansible
  tasks:
    - name: Add nginx.conf to lb1
      copy:
        src: /etc/ansible/nginx_conf/nginx.conf
        dest: /etc/nginx/nginx.conf
    - name: Reload nginx config for lb1
      service: name=nginx state=restarted enabled=yes

- name: Config nginx as load balancer 2
  hosts: lb2
  become: true
  become_method: sudo
  become_user:
    root
  remote_user:
    ansible
  tasks:
    - name: Add nginx.conf to lb2
      copy:
        src: /etc/ansible/nginx_conf/nginx.conf
        dest: /etc/nginx/nginx.conf
    - name: Reload nginx config for lb2
      service: name=nginx state=restarted enabled=yes